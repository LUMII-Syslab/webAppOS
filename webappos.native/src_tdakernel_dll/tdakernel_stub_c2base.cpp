// Automatically generated by StubsGenerator.java

#include "tdakernel_stub_base.h"
#include "tdakernel_stub_c2base.h"

TDAEXTERN void TDACALL TDA_Close(void* _tdaKernel)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return;
  return tdaKernel->close();
}
TDAEXTERN bool TDACALL TDA_Exists(void* _tdaKernel, const char* param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->exists(param1);
}
TDAEXTERN bool TDACALL TDA_Open(void* _tdaKernel, const char* param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->open(param1);
}
TDAEXTERN bool TDACALL TDA_StartSave(void* _tdaKernel)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->startSave();
}
TDAEXTERN bool TDACALL TDA_CancelSave(void* _tdaKernel)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->cancelSave();
}
TDAEXTERN bool TDACALL TDA_FinishSave(void* _tdaKernel)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->finishSave();
}
TDAEXTERN bool TDACALL TDA_Drop(void* _tdaKernel, const char* param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->drop(param1);
}
TDAEXTERN __int64 TDACALL TDA_FindClass(void* _tdaKernel, const char* param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->findClass(param1);
}
TDAEXTERN const char* TDACALL TDA_GetClassName(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return NULL;
  return tdaKernel->getClassName(param1);
}
TDAEXTERN __int64 TDACALL TDA_CreateObject(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->createObject(param1);
}
TDAEXTERN __int64 TDACALL TDA_CreateClass(void* _tdaKernel, const char* param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->createClass(param1);
}
TDAEXTERN bool TDACALL TDA_DeleteClass(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->deleteClass(param1);
}
TDAEXTERN bool TDACALL TDA_IsClass(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->isClass(param1);
}
TDAEXTERN bool TDACALL TDA_IsDirectSubClass(void* _tdaKernel, __int64 param1, __int64 param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->isDirectSubClass(param1, param2);
}
TDAEXTERN bool TDACALL TDA_DeleteObject(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->deleteObject(param1);
}
TDAEXTERN bool TDACALL TDA_MoveObject(void* _tdaKernel, __int64 param1, __int64 param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->moveObject(param1, param2);
}
TDAEXTERN bool TDACALL TDA_IsTypeOf(void* _tdaKernel, __int64 param1, __int64 param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->isTypeOf(param1, param2);
}
TDAEXTERN bool TDACALL TDA_IsKindOf(void* _tdaKernel, __int64 param1, __int64 param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->isKindOf(param1, param2);
}
TDAEXTERN __int64 TDACALL TDA_CreateAttribute(void* _tdaKernel, __int64 param1, const char* param2, __int64 param3)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->createAttribute(param1, param2, param3);
}
TDAEXTERN bool TDACALL TDA_IsDerivedClass(void* _tdaKernel, __int64 param1, __int64 param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->isDerivedClass(param1, param2);
}
TDAEXTERN __int64 TDACALL TDA_FindAttribute(void* _tdaKernel, __int64 param1, const char* param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->findAttribute(param1, param2);
}
TDAEXTERN bool TDACALL TDA_DeleteAttribute(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->deleteAttribute(param1);
}
TDAEXTERN const char* TDACALL TDA_GetAttributeName(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return NULL;
  return tdaKernel->getAttributeName(param1);
}
TDAEXTERN const char* TDACALL TDA_GetPrimitiveDataTypeName(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return NULL;
  return tdaKernel->getPrimitiveDataTypeName(param1);
}
TDAEXTERN __int64 TDACALL TDA_FindPrimitiveDataType(void* _tdaKernel, const char* param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->findPrimitiveDataType(param1);
}
TDAEXTERN bool TDACALL TDA_IsPrimitiveDataType(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->isPrimitiveDataType(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForClasses(void* _tdaKernel)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForClasses();
}
TDAEXTERN const char* TDACALL TDA_GetAttributeValue(void* _tdaKernel, __int64 param1, __int64 param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return NULL;
  return tdaKernel->getAttributeValue(param1, param2);
}
TDAEXTERN __int64 TDACALL TDA_CreateAssociation(void* _tdaKernel, __int64 param1, __int64 param2, const char* param3, const char* param4, bool param5)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->createAssociation(param1, param2, param3, param4, param5);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForDirectSubClasses(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForDirectSubClasses(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForAllClassObjects(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForAllClassObjects(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForDirectAttributes(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForDirectAttributes(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetAttributeDomain(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getAttributeDomain(param1);
}
TDAEXTERN bool TDACALL TDA_DeleteGeneralization(void* _tdaKernel, __int64 param1, __int64 param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->deleteGeneralization(param1, param2);
}
TDAEXTERN bool TDACALL TDA_CreateGeneralization(void* _tdaKernel, __int64 param1, __int64 param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->createGeneralization(param1, param2);
}
TDAEXTERN bool TDACALL TDA_ExcludeObjectFromClass(void* _tdaKernel, __int64 param1, __int64 param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->excludeObjectFromClass(param1, param2);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForAllAttributes(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForAllAttributes(param1);
}
TDAEXTERN bool TDACALL TDA_IncludeObjectInClass(void* _tdaKernel, __int64 param1, __int64 param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->includeObjectInClass(param1, param2);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForDirectSuperClasses(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForDirectSuperClasses(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForDirectClassObjects(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForDirectClassObjects(param1);
}
TDAEXTERN bool TDACALL TDA_SetAttributeValue(void* _tdaKernel, __int64 param1, __int64 param2, const char* param3)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->setAttributeValue(param1, param2, param3);
}
TDAEXTERN bool TDACALL TDA_DeleteAttributeValue(void* _tdaKernel, __int64 param1, __int64 param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->deleteAttributeValue(param1, param2);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForDirectLinguisticInstances(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForDirectLinguisticInstances(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForDirectObjectClasses(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForDirectObjectClasses(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForObjectsByAttributeValue(void* _tdaKernel, __int64 param1, const char* param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForObjectsByAttributeValue(param1, param2);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForAllOutgoingAssociationEnds(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForAllOutgoingAssociationEnds(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForDirectIngoingAssociationEnds(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForDirectIngoingAssociationEnds(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForAllLinguisticInstances(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForAllLinguisticInstances(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForDirectOutgoingAssociationEnds(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForDirectOutgoingAssociationEnds(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForAllIngoingAssociationEnds(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForAllIngoingAssociationEnds(param1);
}
TDAEXTERN __int64 TDACALL TDA_ResolveIterator(void* _tdaKernel, __int64 param1, int param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->resolveIterator(param1, param2);
}
TDAEXTERN const char* TDACALL TDA_GetRoleName(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return NULL;
  return tdaKernel->getRoleName(param1);
}
TDAEXTERN bool TDACALL TDA_DeleteLink(void* _tdaKernel, __int64 param1, __int64 param2, __int64 param3)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->deleteLink(param1, param2, param3);
}
TDAEXTERN bool TDACALL TDA_CreateLink(void* _tdaKernel, __int64 param1, __int64 param2, __int64 param3)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->createLink(param1, param2, param3);
}
TDAEXTERN bool TDACALL TDA_IsLinguistic(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->isLinguistic(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetAttributeType(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getAttributeType(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetTargetClass(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getTargetClass(param1);
}
TDAEXTERN bool TDACALL TDA_IsAssociationEnd(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->isAssociationEnd(param1);
}
TDAEXTERN void TDACALL TDA_FreeReference(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return;
  return tdaKernel->freeReference(param1);
}
TDAEXTERN bool TDACALL TDA_IsAttribute(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->isAttribute(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetSourceClass(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getSourceClass(param1);
}
TDAEXTERN bool TDACALL TDA_LinkExists(void* _tdaKernel, __int64 param1, __int64 param2, __int64 param3)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->linkExists(param1, param2, param3);
}
TDAEXTERN bool TDACALL TDA_IsComposition(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->isComposition(param1);
}
TDAEXTERN void TDACALL TDA_FreeIterator(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return;
  return tdaKernel->freeIterator(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetLinguisticClassFor(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getLinguisticClassFor(param1);
}
TDAEXTERN bool TDACALL TDA_DeleteAssociation(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->deleteAssociation(param1);
}
TDAEXTERN bool TDACALL TDA_CreateOrderedLink(void* _tdaKernel, __int64 param1, __int64 param2, __int64 param3, int param4)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->createOrderedLink(param1, param2, param3, param4);
}
TDAEXTERN __int64 TDACALL TDA_DeserializeReference(void* _tdaKernel, const char* param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->deserializeReference(param1);
}
TDAEXTERN __int64 TDACALL TDA_CreateDirectedAssociation(void* _tdaKernel, __int64 param1, __int64 param2, const char* param3, bool param4)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->createDirectedAssociation(param1, param2, param3, param4);
}
TDAEXTERN bool TDACALL TDA_IsAdvancedAssociation(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return false;
  return tdaKernel->isAdvancedAssociation(param1);
}
TDAEXTERN __int64 TDACALL TDA_ResolveIteratorFirst(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->resolveIteratorFirst(param1);
}
TDAEXTERN const char* TDACALL TDA_CallSpecificOperation(void* _tdaKernel, const char* param1, const char* param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return NULL;
  return tdaKernel->callSpecificOperation(param1, param2);
}
TDAEXTERN __int64 TDACALL TDA_GetInverseAssociationEnd(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getInverseAssociationEnd(param1);
}
TDAEXTERN int TDACALL TDA_GetLinkedObjectPosition(void* _tdaKernel, __int64 param1, __int64 param2, __int64 param3)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getLinkedObjectPosition(param1, param2, param3);
}
TDAEXTERN int TDACALL TDA_GetIteratorLength(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorLength(param1);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForLinkedObjects(void* _tdaKernel, __int64 param1, __int64 param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForLinkedObjects(param1, param2);
}
TDAEXTERN __int64 TDACALL TDA_CreateAdvancedAssociation(void* _tdaKernel, const char* param1, bool param2, bool param3)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->createAdvancedAssociation(param1, param2, param3);
}
TDAEXTERN __int64 TDACALL TDA_GetIteratorForLinguisticClasses(void* _tdaKernel)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->getIteratorForLinguisticClasses();
}
TDAEXTERN __int64 TDACALL TDA_FindAssociationEnd(void* _tdaKernel, __int64 param1, const char* param2)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->findAssociationEnd(param1, param2);
}
TDAEXTERN const char* TDACALL TDA_SerializeReference(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return NULL;
  return tdaKernel->serializeReference(param1);
}
TDAEXTERN __int64 TDACALL TDA_ResolveIteratorNext(void* _tdaKernel, __int64 param1)
{
  StubBase* tdaKernel = (StubBase*)_tdaKernel;
  if (tdaKernel == NULL)
    return 0;
  return tdaKernel->resolveIteratorNext(param1);
}
