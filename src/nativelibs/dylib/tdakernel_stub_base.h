// Automatically generated by StubsGenerator.java

#ifndef TDAKERNEL_STUB_BASE_H
#define TDAKERNEL_STUB_BASE_H

#include <stdlib.h>

#define TDA_EXPORT
#include "tdakernel.h"

class StubBase {
public:
  virtual void close() = 0;
  virtual bool exists(const char* param1) = 0;
  virtual bool open(const char* param1) = 0;
  virtual bool startSave() = 0;
  virtual bool cancelSave() = 0;
  virtual bool finishSave() = 0;
  virtual bool drop(const char* param1) = 0;
  virtual __int64 findClass(const char* param1) = 0;
  virtual const char* getClassName(__int64 param1) = 0;
  virtual __int64 createObject(__int64 param1) = 0;
  virtual __int64 createClass(const char* param1) = 0;
  virtual bool deleteClass(__int64 param1) = 0;
  virtual bool isClass(__int64 param1) = 0;
  virtual bool isDirectSubClass(__int64 param1, __int64 param2) = 0;
  virtual bool deleteObject(__int64 param1) = 0;
  virtual bool moveObject(__int64 param1, __int64 param2) = 0;
  virtual bool isTypeOf(__int64 param1, __int64 param2) = 0;
  virtual bool isKindOf(__int64 param1, __int64 param2) = 0;
  virtual __int64 createAttribute(__int64 param1, const char* param2, __int64 param3) = 0;
  virtual bool isDerivedClass(__int64 param1, __int64 param2) = 0;
  virtual __int64 findAttribute(__int64 param1, const char* param2) = 0;
  virtual bool deleteAttribute(__int64 param1) = 0;
  virtual const char* getAttributeName(__int64 param1) = 0;
  virtual const char* getPrimitiveDataTypeName(__int64 param1) = 0;
  virtual __int64 findPrimitiveDataType(const char* param1) = 0;
  virtual bool isPrimitiveDataType(__int64 param1) = 0;
  virtual __int64 getIteratorForClasses() = 0;
  virtual const char* getAttributeValue(__int64 param1, __int64 param2) = 0;
  virtual __int64 createAssociation(__int64 param1, __int64 param2, const char* param3, const char* param4, bool param5) = 0;
  virtual __int64 getIteratorForDirectSubClasses(__int64 param1) = 0;
  virtual __int64 getIteratorForAllClassObjects(__int64 param1) = 0;
  virtual __int64 getIteratorForDirectAttributes(__int64 param1) = 0;
  virtual __int64 getAttributeDomain(__int64 param1) = 0;
  virtual bool deleteGeneralization(__int64 param1, __int64 param2) = 0;
  virtual bool createGeneralization(__int64 param1, __int64 param2) = 0;
  virtual bool excludeObjectFromClass(__int64 param1, __int64 param2) = 0;
  virtual __int64 getIteratorForAllAttributes(__int64 param1) = 0;
  virtual bool includeObjectInClass(__int64 param1, __int64 param2) = 0;
  virtual __int64 getIteratorForDirectSuperClasses(__int64 param1) = 0;
  virtual __int64 getIteratorForDirectClassObjects(__int64 param1) = 0;
  virtual bool setAttributeValue(__int64 param1, __int64 param2, const char* param3) = 0;
  virtual bool deleteAttributeValue(__int64 param1, __int64 param2) = 0;
  virtual __int64 getIteratorForDirectLinguisticInstances(__int64 param1) = 0;
  virtual __int64 getIteratorForDirectObjectClasses(__int64 param1) = 0;
  virtual __int64 getIteratorForObjectsByAttributeValue(__int64 param1, const char* param2) = 0;
  virtual __int64 getIteratorForAllOutgoingAssociationEnds(__int64 param1) = 0;
  virtual __int64 getIteratorForDirectIngoingAssociationEnds(__int64 param1) = 0;
  virtual __int64 getIteratorForAllLinguisticInstances(__int64 param1) = 0;
  virtual __int64 getIteratorForDirectOutgoingAssociationEnds(__int64 param1) = 0;
  virtual __int64 getIteratorForAllIngoingAssociationEnds(__int64 param1) = 0;
  virtual __int64 resolveIterator(__int64 param1, int param2) = 0;
  virtual const char* getRoleName(__int64 param1) = 0;
  virtual bool deleteLink(__int64 param1, __int64 param2, __int64 param3) = 0;
  virtual bool createLink(__int64 param1, __int64 param2, __int64 param3) = 0;
  virtual bool isLinguistic(__int64 param1) = 0;
  virtual __int64 getAttributeType(__int64 param1) = 0;
  virtual __int64 getTargetClass(__int64 param1) = 0;
  virtual bool isAssociationEnd(__int64 param1) = 0;
  virtual void freeReference(__int64 param1) = 0;
  virtual bool isAttribute(__int64 param1) = 0;
  virtual __int64 getSourceClass(__int64 param1) = 0;
  virtual bool linkExists(__int64 param1, __int64 param2, __int64 param3) = 0;
  virtual bool isComposition(__int64 param1) = 0;
  virtual void freeIterator(__int64 param1) = 0;
  virtual __int64 getLinguisticClassFor(__int64 param1) = 0;
  virtual bool deleteAssociation(__int64 param1) = 0;
  virtual bool createOrderedLink(__int64 param1, __int64 param2, __int64 param3, int param4) = 0;
  virtual __int64 deserializeReference(const char* param1) = 0;
  virtual __int64 createDirectedAssociation(__int64 param1, __int64 param2, const char* param3, bool param4) = 0;
  virtual bool isAdvancedAssociation(__int64 param1) = 0;
  virtual __int64 resolveIteratorFirst(__int64 param1) = 0;
  virtual const char* callSpecificOperation(const char* param1, const char* param2) = 0;
  virtual __int64 getInverseAssociationEnd(__int64 param1) = 0;
  virtual int getLinkedObjectPosition(__int64 param1, __int64 param2, __int64 param3) = 0;
  virtual int getIteratorLength(__int64 param1) = 0;
  virtual __int64 getIteratorForLinkedObjects(__int64 param1, __int64 param2) = 0;
  virtual __int64 createAdvancedAssociation(const char* param1, bool param2, bool param3) = 0;
  virtual __int64 getIteratorForLinguisticClasses() = 0;
  virtual __int64 findAssociationEnd(__int64 param1, const char* param2) = 0;
  virtual const char* serializeReference(__int64 param1) = 0;
  virtual __int64 resolveIteratorNext(__int64 param1) = 0;
  virtual ~StubBase();
}; // class StubBase
#endif // TDAKERNEL_STUB_BASE_H
